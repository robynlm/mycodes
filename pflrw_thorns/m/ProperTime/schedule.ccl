# File produced by Kranc

STORAGE: propertime[timelevels]

STORAGE: propertimerhs[rhs_timelevels]
schedule ProperTime_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ProperTime_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule ProperTime_Initial IN CCTK_INITIAL
{
  LANG: C
  WRITES: ProperTime::tau(Everywhere)
} "ProperTime_Initial"

schedule ProperTime_RHS IN MoL_CalcRHS
{
  LANG: C
  READS: ADMBase::alp(Everywhere)
  READS: ADMBase::gxx(Everywhere)
  READS: ADMBase::gxy(Everywhere)
  READS: ADMBase::gxz(Everywhere)
  READS: ADMBase::gyy(Everywhere)
  READS: ADMBase::gyz(Everywhere)
  READS: ADMBase::gzz(Everywhere)
  READS: ADMBase::betax(Everywhere)
  READS: ADMBase::betay(Everywhere)
  READS: ADMBase::betaz(Everywhere)
  WRITES: ProperTime::taurhs(Everywhere)
} "ProperTime_RHS"

schedule ProperTime_InitRHS AT analysis BEFORE ProperTime_RHS
{
  LANG: C
  WRITES: ProperTime::taurhs(Everywhere)
} "ProperTime_InitRHS"

schedule ProperTime_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: propertime
} "select boundary conditions"

schedule ProperTime_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule ProperTime_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"
schedule group ApplyBCs as ProperTime_ApplyBCs in MoL_PostStep after ProperTime_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
